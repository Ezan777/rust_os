[unstable]
build-std-features = ["compiler-builtins-mem"] # Include functions for memory copy, moving and comparing
build-std = ["core", "compiler_builtins"] # Recompile core for our target

[build]
target = "x86_64-rust_os.json"

# If the target does not have an os create the bootimage from the binary
[target.'cfg(target_os = "none")']
runner = "bootimage runner" # This command is designed to be used as a runner executable, it links the given executable with the project bootloader and then launches QEMU